#parse("./templates/common/javaClassHeader.vm")#parse("./templates/common/javaClassVariable.vm")
package ${package.Entity};

#set($getprefix="get")
#if(${activeRecord})
import java.io.Serializable;
import com.tester.base.dto.dao.BaseDomain;

#end
#if(${entityLombokModel})


import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;
#end

/**
 * $!{table.comment}(与数据库表字段一一对应的实体类,公有字段继承至父类)
 *
 * @author ${author}
 * @version 1.0.0
 * @date ${date}
 */
#if(${entityLombokModel})
@Data
@EqualsAndHashCode(callSuper = true)
@Accessors(chain = true)
#end
## #if(${table.convert})
## @TableName("${table.name}")
## #end
#if(${superEntityClass})
public class ${entity}Domain extends ${superEntityClass} {
#elseif(${activeRecord})
@Data
public class ${entity}Domain extends BaseDomain{
#else
public class ${entity}Domain implements Serializable {
#end
    private static final long serialVersionUID = 1L;
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
#if("id" != ${field.propertyName} && "createTime" != ${field.propertyName} && "updateTime" != ${field.propertyName} && "revision" != ${field.propertyName} && "deleted" != ${field.propertyName})
    /**
     * ${field.comment}
     */
    private ${field.propertyType} ${field.propertyName};
#end
#end
##存在字段填充设置 end

#if(!${entityLombokModel})
#foreach($field in ${table.fields})
##get方法 begin
#if("id" != ${field.propertyName} && "createTime" != ${field.propertyName} && "updateTime" != ${field.propertyName} && "revision" != ${field.propertyName} && "deleted" != ${field.propertyName})
#if(${field.propertyType.equals("boolean")})
#set($getprefix="is")
#else
#set($getprefix="get")
#end
    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

#end
##get方法 end
##set方法 begin
#if("id" != ${field.propertyName} && "createTime" != ${field.propertyName} && "updateTime" != ${field.propertyName} && "revision" != ${field.propertyName} && "deleted" != ${field.propertyName})
#if(${entityBuilderModel})
    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#end
        this.${field.propertyName} = ${field.propertyName};
#if(${entityBuilderModel})
        return this;
#end
    }
#end
##set方法 end
#end
#end
#if(${entityColumnConstant})
    #foreach($field in ${table.fields})
        #if("id" != ${field.propertyName} && "createTime" != ${field.propertyName} && "updateTime" != ${field.propertyName} && "revision" != ${field.propertyName} && "deleted" != ${field.propertyName})
    public static final String ${field.name.toUpperCase()} = "${field.name}";
        #end
    #end
#end

#if(!${entityLombokModel})
    @Override
    public String toString() {
        return "${entity}{" +
#foreach($field in ${table.fields})
#if($!{velocityCount}==1)
        "${field.propertyName}=" + ${field.propertyName} +
#else
        ", ${field.propertyName}=" + ${field.propertyName} +
#end
#end
        "}";
    }
#end
}